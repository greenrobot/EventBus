apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

archivesBaseName = 'eventbus-annotation-processor'
group = 'org.greenrobot'
version = '3.0.1'

sourceCompatibility = 1.7

def isSnapshot = version.endsWith('-SNAPSHOT')
def sonatypeRepositoryUrl
if (isSnapshot) {
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

repositories {
    mavenCentral()
}

// Still unsupported, see http://issues.gradle.org/browse/GRADLE-784
// Like this, it won't appear at all in the POM
configurations {
    provided
    deployerJars
}

dependencies {
    compile project(':EventBus')
    compile 'de.greenrobot:java-common:2.3.1'
    deployerJars 'org.apache.maven.wagon:wagon-webdav:1.0-beta-2'
}

sourceSets {
    main {
        compileClasspath += configurations.provided
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'res'
        }
    }
}

javadoc {
    classpath += configurations.provided
    title = "EventBus Annotation Processor ${version} API"
	options.bottom = 'Available under the Apache License, Version 2.0 - <i>Copyright &#169; 2015-2016 <a href="http://greenrobot.org">greenrobot.org</a>. All Rights Reserved.</i>'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    if (project.hasProperty('signing.keyId') && project.hasProperty('signing.password') &&
            project.hasProperty('signing.secretKeyRingFile')) {
        sign configurations.archives
    } else {
        println "Signing information missing/incomplete for ${project.name}"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            if (project.hasProperty('preferedRepo') && project.hasProperty('preferedUsername')
                    && project.hasProperty('preferedPassword')) {
                configuration = configurations.deployerJars
                repository(url: preferedRepo) {
                    authentication(userName: preferedUsername, password: preferedPassword)
                }
            } else if (project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }
            } else {
                println "Settings sonatypeUsername/sonatypePassword missing/incomplete for ${project.name}"
            }

            pom.project {
                name 'EventBus Annotation Processor'
                packaging 'jar'
                description 'Precompiler for EventBus Annotations.'
                url 'http://greenrobot.org/eventbus/'

                scm {
                    url 'https://github.com/greenrobot/EventBus'
                    connection 'scm:git@github.com:greenrobot/EventBus.git'
                    developerConnection 'scm:git@github.com:greenrobot/EventBus.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'greenrobot'
                        name 'greenrobot'
                    }
                }

                issueManagement {
                    system 'GitHub Issues'
                    url 'https://github.com/greenrobot/EventBus/issues'
                }

                organization {
                    name 'greenrobot'
                    url 'http://greenrobot.org'
                }
            }
        }
    }
}